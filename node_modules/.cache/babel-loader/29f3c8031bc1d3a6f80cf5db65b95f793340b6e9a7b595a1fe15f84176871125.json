{"ast":null,"code":"var _jsxFileName = \"/home/bellz/Development/BOT/src/components/YourBotArmy.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport BotCard from \"./BotCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction YourBotArmy() {\n  _s();\n  const [army, setArmy] = useState([]);\n  const releaseBot = bot => {\n    const newArmy = army.filter(b => b !== bot);\n    setArmy(newArmy);\n  };\n  const enlistBot = bot => {\n    if (!army.includes(bot)) {\n      setArmy([...army, bot]);\n    }\n  };\n  const deleteBot = bot => {\n    fetch(`http://localhost:8001/bots/${bot.id}`, {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(bot)\n    }).then(() => {\n      const newArmy = army.filter(b => b !== bot);\n      setArmy(newArmy);\n    });\n  };\n  const allBots = BotCard.all || [];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bot-army\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Your Bot Army\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-container\",\n      children: /*#__PURE__*/_jsxDEV(BotCard, {\n        onEnlist: onEnlist\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 7\n  }, this);\n}\n_s(YourBotArmy, \"QLDV7L1XtdT2me87iEwv71oMomY=\");\n_c = YourBotArmy;\nexport default YourBotArmy;\nvar _c;\n$RefreshReg$(_c, \"YourBotArmy\");","map":{"version":3,"names":["React","BotCard","jsxDEV","_jsxDEV","YourBotArmy","_s","army","setArmy","useState","releaseBot","bot","newArmy","filter","b","enlistBot","includes","deleteBot","fetch","id","method","headers","body","JSON","stringify","then","allBots","all","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onEnlist","_c","$RefreshReg$"],"sources":["/home/bellz/Development/BOT/src/components/YourBotArmy.js"],"sourcesContent":["  import React from \"react\";\n  import BotCard from \"./BotCard\";\n\n  \n  function YourBotArmy() {\n    const [army, setArmy] = useState([]);\n    \n    const releaseBot = (bot) => {\n      const newArmy = army.filter((b) => b !== bot);\n      setArmy(newArmy);\n    };\n\n    const enlistBot = (bot) => {\n      if (!army.includes(bot)) {\n        setArmy([...army, bot]);\n      }\n    };\n\n    const deleteBot = (bot) => {\n      fetch(`http://localhost:8001/bots/${bot.id}`, {\n        method: \"DELETE\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(bot),\n      }).then(() => {\n        const newArmy = army.filter((b) => b !== bot);\n        setArmy(newArmy);\n      });\n    };\n\n    const allBots = BotCard.all || [];\n\n    return (\n      <div className=\"bot-army\">\n        <h2>Your Bot Army</h2>\n        <div className=\"card-container\">\n          <BotCard \n          onEnlist={onEnlist}/>\n          {/* {army.map((bot) => (\n            <BotCard\n              key={bot.id}\n              bot={bot}\n              onClick={() => releaseBot(bot)}\n              buttonText=\"Release\"\n              deleteBot={() => deleteBot(bot)}\n            />\n          ))} */}\n          \n        </div>\n \n        {/* <div className=\"card-container\">\n          {allBots.map((bot) => (\n            <BotCard\n              key={bot.id}\n              bot={bot}\n              onClick={() => enlistBot(bot)}\n            // buttonText=\"Enlist\"\n            />\n          ))}\n        </div> */}\n      </div>\n    );\n  }\n\n  export default YourBotArmy;"],"mappings":";;AAAE,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,OAAO,MAAM,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGhC,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACrB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGC,QAAQ,CAAC,EAAE,CAAC;EAEpC,MAAMC,UAAU,GAAIC,GAAG,IAAK;IAC1B,MAAMC,OAAO,GAAGL,IAAI,CAACM,MAAM,CAAEC,CAAC,IAAKA,CAAC,KAAKH,GAAG,CAAC;IAC7CH,OAAO,CAACI,OAAO,CAAC;EAClB,CAAC;EAED,MAAMG,SAAS,GAAIJ,GAAG,IAAK;IACzB,IAAI,CAACJ,IAAI,CAACS,QAAQ,CAACL,GAAG,CAAC,EAAE;MACvBH,OAAO,CAAC,CAAC,GAAGD,IAAI,EAAEI,GAAG,CAAC,CAAC;IACzB;EACF,CAAC;EAED,MAAMM,SAAS,GAAIN,GAAG,IAAK;IACzBO,KAAK,CAAE,8BAA6BP,GAAG,CAACQ,EAAG,EAAC,EAAE;MAC5CC,MAAM,EAAE,QAAQ;MAChBC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACb,GAAG;IAC1B,CAAC,CAAC,CAACc,IAAI,CAAC,MAAM;MACZ,MAAMb,OAAO,GAAGL,IAAI,CAACM,MAAM,CAAEC,CAAC,IAAKA,CAAC,KAAKH,GAAG,CAAC;MAC7CH,OAAO,CAACI,OAAO,CAAC;IAClB,CAAC,CAAC;EACJ,CAAC;EAED,MAAMc,OAAO,GAAGxB,OAAO,CAACyB,GAAG,IAAI,EAAE;EAEjC,oBACEvB,OAAA;IAAKwB,SAAS,EAAC,UAAU;IAAAC,QAAA,gBACvBzB,OAAA;MAAAyB,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtB7B,OAAA;MAAKwB,SAAS,EAAC,gBAAgB;MAAAC,QAAA,eAC7BzB,OAAA,CAACF,OAAO;QACRgC,QAAQ,EAAEA;MAAS;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAWlB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAYH,CAAC;AAEV;AAAC3B,EAAA,CA3DQD,WAAW;AAAA8B,EAAA,GAAX9B,WAAW;AA6DpB,eAAeA,WAAW;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}