{"ast":null,"code":"var _jsxFileName = \"/home/bellz/Development/BOT/src/components/BotCollection.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport BotCard from \"./BotCard\";\nimport BotSpecs from \"./BotSpecs\";\nimport SortBar from \"./SortBar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction BotCollection(_ref) {\n  _s();\n  let {\n    addToArmy,\n    army\n  } = _ref;\n  const [bots, setBots] = useState([]);\n  const [selectedBot, setSelectedBot] = useState(null);\n  const [filters, setFilters] = useState([]);\n  const [sortKey, setSortKey] = useState(null);\n  useEffect(() => {\n    fetch(\"http://localhost:8001/bots\").then(response => response.json()).then(data => setBots(data));\n  }, []);\n  const enlistBot = bot => {\n    if (!army.find(b => b.id === bot.id)) {\n      addToArmy(bot);\n      setBots(bots.filter(b => b.id !== bot.id));\n    }\n  };\n  const filterBots = bots => {\n    if (filters.length === 0) {\n      return bots;\n    }\n    return bots.filter(bot => filters.includes(bot.bot_class));\n  };\n  const sortBots = bots => {\n    if (sortKey === null) {\n      return bots;\n    }\n    return bots.sort((a, b) => b[sortKey] - a[sortKey]);\n  };\n  const handleFilterChange = newFilters => {\n    setFilters(newFilters);\n  };\n  const handleSortChange = key => {\n    setSortKey(key);\n  };\n  if (selectedBot) {\n    return /*#__PURE__*/_jsxDEV(BotSpecs, {\n      bot: selectedBot,\n      onEnlist: enlistBot\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bot-collection\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Bots Collection\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SortBar, {\n      onFilterChange: handleFilterChange,\n      onSortChange: handleSortChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-container horizontal\",\n      children: sortBots(filterBots(bots)).map(bot => /*#__PURE__*/_jsxDEV(BotCard, {\n        bot: bot,\n        onEnlist: () => setSelectedBot(bot),\n        buttonText: \"Enlist\",\n        disabled: army.find(b => b.id === bot.id)\n      }, bot.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n_s(BotCollection, \"bLTzRkDZYZW5qlH8GHugk/qkRSM=\");\n_c = BotCollection;\nexport default BotCollection;\nvar _c;\n$RefreshReg$(_c, \"BotCollection\");","map":{"version":3,"names":["React","useState","useEffect","BotCard","BotSpecs","SortBar","jsxDEV","_jsxDEV","BotCollection","_ref","_s","addToArmy","army","bots","setBots","selectedBot","setSelectedBot","filters","setFilters","sortKey","setSortKey","fetch","then","response","json","data","enlistBot","bot","find","b","id","filter","filterBots","length","includes","bot_class","sortBots","sort","a","handleFilterChange","newFilters","handleSortChange","key","onEnlist","fileName","_jsxFileName","lineNumber","columnNumber","className","children","onFilterChange","onSortChange","map","buttonText","disabled","_c","$RefreshReg$"],"sources":["/home/bellz/Development/BOT/src/components/BotCollection.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport BotCard from \"./BotCard\";\nimport BotSpecs from \"./BotSpecs\";\nimport SortBar from \"./SortBar\";\n\nfunction BotCollection({ addToArmy, army }) {\n  const [bots, setBots] = useState([]);\n  const [selectedBot, setSelectedBot] = useState(null);\n  const [filters, setFilters] = useState([]);\n  const [sortKey, setSortKey] = useState(null);\n\n  useEffect(() => {\n    fetch(\"http://localhost:8001/bots\")\n      .then((response) => response.json())\n      .then((data) => setBots(data));\n  }, []);\n\n  const enlistBot = (bot) => {\n    if (!army.find((b) => b.id === bot.id)) {\n      addToArmy(bot);\n      setBots(bots.filter((b) => b.id !== bot.id));\n    }\n  };\n\n  const filterBots = (bots) => {\n    if (filters.length === 0) {\n      return bots;\n    }\n    return bots.filter((bot) => filters.includes(bot.bot_class));\n  };\n\n  const sortBots = (bots) => {\n    if (sortKey === null) {\n      return bots;\n    }\n    return bots.sort((a, b) => b[sortKey] - a[sortKey]);\n  };\n\n  const handleFilterChange = (newFilters) => {\n    setFilters(newFilters);\n  };\n\n  const handleSortChange = (key) => {\n    setSortKey(key);\n  };\n\n  if (selectedBot) {\n    return <BotSpecs bot={selectedBot} onEnlist={enlistBot} />;\n  }\n\n  return (\n    <div className=\"bot-collection\">\n      <h2>Bots Collection</h2>\n      <SortBar onFilterChange={handleFilterChange} onSortChange={handleSortChange} />\n      <div className=\"card-container horizontal\">\n        {sortBots(filterBots(bots)).map((bot) => (\n          <BotCard\n            key={bot.id}\n            bot={bot}\n            onEnlist={() => setSelectedBot(bot)}\n            buttonText=\"Enlist\"\n            disabled={army.find((b) => b.id === bot.id)}\n          />\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default BotCollection;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}