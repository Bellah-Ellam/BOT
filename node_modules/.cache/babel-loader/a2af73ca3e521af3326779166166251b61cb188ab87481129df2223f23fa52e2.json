{"ast":null,"code":"var _jsxFileName = \"/home/bellz/Development/BOT/src/components/YourBotArmy.js\";\nimport React from \"react\";\nimport BotCard from \"./BotCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction YourBotArmy(_ref) {\n  let {\n    army = [],\n    setArmy\n  } = _ref;\n  const releaseBot = bot => {\n    const newArmy = army.filter(b => b !== bot);\n    setArmy(newArmy);\n  };\n  const enlistBot = bot => {\n    if (!army.includes(bot)) {\n      setArmy([...army, bot]);\n    }\n  };\n  const deleteBot = bot => {\n    fetch(`http://localhost:8001/bots/${bot.id}`, {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(bot)\n    }).then(() => {\n      const newArmy = army.filter(b => b !== bot);\n      setArmy(newArmy);\n    });\n  };\n  const allBots = BotCard.all || [];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bot-army\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Your Bot Army\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-container\",\n      children: army.map(bot => /*#__PURE__*/_jsxDEV(BotCard, {\n        bot: bot,\n        handleClick: () => releaseBot(bot),\n        buttonText: \"Release\",\n        deleteBot: () => deleteBot(bot)\n      }, bot.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Bot Collection\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-container\",\n      children: allBots.map(bot => /*#__PURE__*/_jsxDEV(BotCard, {\n        bot: bot,\n        onClick: () => enlistBot(bot)\n        // buttonText=\"Enlist\"\n      }, bot.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 7\n  }, this);\n}\n_c = YourBotArmy;\nexport default YourBotArmy;\nvar _c;\n$RefreshReg$(_c, \"YourBotArmy\");","map":{"version":3,"names":["React","BotCard","jsxDEV","_jsxDEV","YourBotArmy","_ref","army","setArmy","releaseBot","bot","newArmy","filter","b","enlistBot","includes","deleteBot","fetch","id","method","headers","body","JSON","stringify","then","allBots","all","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","handleClick","buttonText","onClick","_c","$RefreshReg$"],"sources":["/home/bellz/Development/BOT/src/components/YourBotArmy.js"],"sourcesContent":["  import React from \"react\";\n  import BotCard from \"./BotCard\";\n\n  function YourBotArmy({ army = [], setArmy }) {\n    const releaseBot = (bot) => {\n      const newArmy = army.filter((b) => b !== bot);\n      setArmy(newArmy);\n    };\n\n    const enlistBot = (bot) => {\n      if (!army.includes(bot)) {\n        setArmy([...army, bot]);\n      }\n    };\n\n    const deleteBot = (bot) => {\n      fetch(`http://localhost:8001/bots/${bot.id}`, {\n        method: \"DELETE\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(bot),\n      }).then(() => {\n        const newArmy = army.filter((b) => b !== bot);\n        setArmy(newArmy);\n      });\n    };\n\n    const allBots = BotCard.all || [];\n\n    return (\n      <div className=\"bot-army\">\n        <h2>Your Bot Army</h2>\n        <div className=\"card-container\">\n          {army.map((bot) => (\n            <BotCard\n              key={bot.id}\n              bot={bot}\n              handleClick={() => releaseBot(bot)}\n              buttonText=\"Release\"\n              deleteBot={() => deleteBot(bot)}\n            />\n          ))}\n        </div>\n        <hr />\n        <h2>Bot Collection</h2>\n        <div className=\"card-container\">\n          {allBots.map((bot) => (\n            <BotCard\n              key={bot.id}\n              bot={bot}\n              onClick={() => enlistBot(bot)}\n              // buttonText=\"Enlist\"\n            />\n          ))}\n        </div>\n      </div>\n    );\n  }\n\n  export default YourBotArmy;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}