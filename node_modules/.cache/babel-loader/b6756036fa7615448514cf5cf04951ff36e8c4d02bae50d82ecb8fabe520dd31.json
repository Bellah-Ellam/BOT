{"ast":null,"code":"var _jsxFileName = \"/home/bellz/Development/BOT/src/components/BotCollection.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport BotCard from \"./BotCard\";\nimport BotSpecs from \"./BotSpecs\";\nimport SortBar from \"./SortBar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction BotCollection(_ref) {\n  _s();\n  let {\n    addToArmy,\n    army\n  } = _ref;\n  const [bots, setBots] = useState([]);\n  const [selectedBot, setSelectedBot] = useState(null);\n  const [filters, setFilters] = useState([]);\n  const [sortKey, setSortKey] = useState(null);\n  useEffect(() => {\n    fetch(\"http://localhost:8001/bots\").then(response => response.json()).then(data => setBots(data));\n  }, []);\n  const enlistBot = bot => {\n    if (!army.find(b => b.id === bot.id)) {\n      addToArmy(bot);\n    }\n  };\n  const onSort = key => {\n    setSortKey(key);\n  };\n  const onFilter = filter => {\n    setFilters(prevFilters => {\n      if (prevFilters.includes(filter)) {\n        return prevFilters.filter(f => f !== filter);\n      } else {\n        return [...prevFilters, filter];\n      }\n    });\n  };\n  if (selectedBot) {\n    return /*#__PURE__*/_jsxDEV(BotSpecs, {\n      bot: selectedBot,\n      onEnlist: enlistBot\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 12\n    }, this);\n  }\n  const filteredBots = bots.filter(bot => {\n    if (filters.length === 0) {\n      return true;\n    } else {\n      return filters.includes(bot.bot_class);\n    }\n  });\n  const sortedBots = sortKey ? [...filteredBots].sort((a, b) => b[sortKey] - a[sortKey]) : filteredBots;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bot-collection\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Bots Collection\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SortBar, {\n      onSort: onSort\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-container horizontal\",\n      children: selectedBot ? /*#__PURE__*/_jsxDEV(BotSpecs, {\n        bot: selectedBot,\n        buttonText: \"Enlist\",\n        onButtonClick: () => {\n          enlistBot(selectedBot);\n          setSelectedBot(null);\n        },\n        onBackClick: () => setSelectedBot(null)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this) : sortedBots.map(bot => /*#__PURE__*/_jsxDEV(BotCard, {\n        bot: bot,\n        onEnlist: () => enlistBot(bot),\n        onDetails: () => setSelectedBot(bot),\n        buttonText: \"Enlist\",\n        disabled: army.find(b => b.id === bot.id)\n      }, bot.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n_s(BotCollection, \"bLTzRkDZYZW5qlH8GHugk/qkRSM=\");\n_c = BotCollection;\nexport default BotCollection;\nvar _c;\n$RefreshReg$(_c, \"BotCollection\");","map":{"version":3,"names":["React","useState","useEffect","BotCard","BotSpecs","SortBar","jsxDEV","_jsxDEV","BotCollection","_ref","_s","addToArmy","army","bots","setBots","selectedBot","setSelectedBot","filters","setFilters","sortKey","setSortKey","fetch","then","response","json","data","enlistBot","bot","find","b","id","onSort","key","onFilter","filter","prevFilters","includes","f","onEnlist","fileName","_jsxFileName","lineNumber","columnNumber","filteredBots","length","bot_class","sortedBots","sort","a","className","children","buttonText","onButtonClick","onBackClick","map","onDetails","disabled","_c","$RefreshReg$"],"sources":["/home/bellz/Development/BOT/src/components/BotCollection.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport BotCard from \"./BotCard\";\nimport BotSpecs from \"./BotSpecs\";\nimport SortBar from \"./SortBar\";\n\nfunction BotCollection({ addToArmy, army }) {\n  const [bots, setBots] = useState([]);\n  const [selectedBot, setSelectedBot] = useState(null);\n  const [filters, setFilters] = useState([]);\n  const [sortKey, setSortKey] = useState(null);\n\n  useEffect(() => {\n    fetch(\"http://localhost:8001/bots\")\n      .then((response) => response.json())\n      .then((data) => setBots(data));\n  }, []);\n\n  const enlistBot = (bot) => {\n    if (!army.find((b) => b.id === bot.id)) {\n      addToArmy(bot);\n    }\n  };\n\n  const onSort = (key) => {\n    setSortKey(key);\n  };\n\n  const onFilter = (filter) => {\n    setFilters((prevFilters) => {\n      if (prevFilters.includes(filter)) {\n        return prevFilters.filter((f) => f !== filter);\n      } else {\n        return [...prevFilters, filter];\n      }\n    });\n  };\n  if (selectedBot) {\n    return <BotSpecs bot={selectedBot} onEnlist={enlistBot} />;\n  }\n\n  const filteredBots = bots.filter((bot) => {\n    if (filters.length === 0) {\n      return true;\n    } else {\n      return filters.includes(bot.bot_class);\n    }\n  });\n\n  const sortedBots = sortKey\n    ? [...filteredBots].sort((a, b) => b[sortKey] - a[sortKey])\n    : filteredBots;\n\n  return (\n    <div className=\"bot-collection\">\n      <h2>Bots Collection</h2>\n      <SortBar onSort={onSort} />\n      <div className=\"card-container horizontal\">\n        {selectedBot ? (\n          <BotSpecs\n            bot={selectedBot}\n            buttonText=\"Enlist\"\n            onButtonClick={() => {\n              enlistBot(selectedBot);\n              setSelectedBot(null);\n            }}\n            onBackClick={() => setSelectedBot(null)}\n          />\n        ) : (\n          sortedBots.map((bot) => (\n            <BotCard\n              key={bot.id}\n              bot={bot}\n              onEnlist={() => enlistBot(bot)}\n              onDetails={() => setSelectedBot(bot)}\n              buttonText=\"Enlist\"\n              disabled={army.find((b) => b.id === bot.id)}\n            />\n          ))\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default BotCollection;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}